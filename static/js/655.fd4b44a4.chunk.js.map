{"version":3,"file":"static/js/655.fd4b44a4.chunk.js","mappings":"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","sources":["../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/init/init.js","../node_modules/emailjs-com/es/methods/send/send.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","components/Form.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import {\n  TextField,\n  Button,\n  Box,\n  MenuItem,\n  FormControlLabel,\n  Checkbox,\n  Snackbar,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport emailjs from \"emailjs-com\";\n\nexport default function ContactForm() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    city: \"\",\n    contactNumber: \"\",\n    email: \"\",\n    age: \"\",\n    healthGoal: \"\",\n    addiction: \"\",\n    lifestyle: \"\",\n    joinWhatsappGroup: false,\n  });\n\n  const [errors, setErrors] = useState({});\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === \"checkbox\" ? checked : value,\n    });\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name) newErrors.name = \"Name is required\";\n    if (!formData.city) newErrors.city = \"City is required\";\n    if (!formData.contactNumber)\n      newErrors.contactNumber = \"Contact Number is required\";\n    if (!formData.age) newErrors.age = \"Age is required\";\n    if (!formData.healthGoal) newErrors.healthGoal = \"Health Goal is required\";\n    if (!formData.addiction)\n      newErrors.addiction = \"Addiction status is required\";\n    if (!formData.lifestyle) newErrors.lifestyle = \"Lifestyle is required\";\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n\n    const emailParams = {\n      name: formData.name,\n      city: formData.city,\n      contactNumber: formData.contactNumber,\n      email: formData.email || \"Not provided\",\n      age: formData.age,\n      healthGoal: formData.healthGoal,\n      addiction: formData.addiction,\n      lifestyle: formData.lifestyle,\n      joinWhatsappGroup: formData.joinWhatsappGroup ? \"Yes\" : \"No\",\n    };\n\n    emailjs\n      .send(\n        \"service_9og51t7\",\n        \"template_z4bbx0u\",\n        emailParams,\n        \"Z8AbpDCJ6vBLflIPa\"\n      )\n      .then(\n        (response) => {\n          console.log(\"SUCCESS!\", response.status, response.text);\n          setOpenSnackbar(true);\n        },\n        (err) => {\n          console.log(\"FAILED...\", err);\n        }\n      );\n  };\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        p: 4,\n        maxWidth: \"600px\",\n        margin: \"auto\",\n        boxShadow: 3,\n        borderRadius: 3,\n        backgroundColor: \"#fff\",\n      }}\n      onSubmit={handleSubmit}\n    >\n      <TextField\n        name=\"name\"\n        label=\"Name\"\n        fullWidth\n        margin=\"normal\"\n        onChange={handleChange}\n        error={!!errors.name}\n        helperText={errors.name}\n      />\n      <TextField\n        name=\"city\"\n        label=\"City\"\n        fullWidth\n        margin=\"normal\"\n        onChange={handleChange}\n        error={!!errors.city}\n        helperText={errors.city}\n      />\n      <TextField\n        name=\"contactNumber\"\n        label=\"Contact Number\"\n        fullWidth\n        margin=\"normal\"\n        onChange={handleChange}\n        error={!!errors.contactNumber}\n        helperText={errors.contactNumber}\n      />\n      <TextField\n        name=\"email\"\n        label=\"Email (Optional)\"\n        fullWidth\n        margin=\"normal\"\n        onChange={handleChange}\n      />\n      <TextField\n        name=\"age\"\n        label=\"Age\"\n        fullWidth\n        margin=\"normal\"\n        onChange={handleChange}\n        error={!!errors.age}\n        helperText={errors.age}\n      />\n      <TextField\n        select\n        label=\"What is your health goal?\"\n        name=\"healthGoal\"\n        fullWidth\n        margin=\"normal\"\n        onChange={handleChange}\n        error={!!errors.healthGoal}\n        helperText={errors.healthGoal}\n      >\n        <MenuItem value=\"Weight loss\">Weight loss</MenuItem>\n        <MenuItem value=\"Weight gain\">Weight gain</MenuItem>\n        <MenuItem value=\"Diabetes management\">Diabetes management</MenuItem>\n        <MenuItem value=\"BP/Cholesterol management\">\n          BP/Cholesterol management\n        </MenuItem>\n        <MenuItem value=\"Joint pain\">Joint pain</MenuItem>\n        <MenuItem value=\"Thyroid\">Thyroid</MenuItem>\n        <MenuItem value=\"Digestion issue\">Digestion issue</MenuItem>\n        <MenuItem value=\"PCOD/PCOS\">PCOD/PCOS</MenuItem>\n      </TextField>\n\n      <TextField\n        select\n        label=\"Any Addiction?\"\n        name=\"addiction\"\n        fullWidth\n        margin=\"normal\"\n        onChange={handleChange}\n        error={!!errors.addiction}\n        helperText={errors.addiction}\n      >\n        <MenuItem value=\"Yes\">Yes</MenuItem>\n        <MenuItem value=\"No\">No</MenuItem>\n      </TextField>\n\n      <TextField\n        select\n        label=\"Lifestyle\"\n        name=\"lifestyle\"\n        fullWidth\n        margin=\"normal\"\n        onChange={handleChange}\n        error={!!errors.lifestyle}\n        helperText={errors.lifestyle}\n      >\n        <MenuItem value=\"Inactive\">Inactive</MenuItem>\n        <MenuItem value=\"Medium active\">Medium active</MenuItem>\n        <MenuItem value=\"Daily workout\">Daily workout</MenuItem>\n      </TextField>\n\n      <FormControlLabel\n        control={\n          <Checkbox\n            name=\"joinWhatsappGroup\"\n            checked={formData.joinWhatsappGroup}\n            onChange={handleChange}\n          />\n        }\n        label=\"Do you want to join health tips WhatsApp group?\"\n      />\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        sx={{ mt: 2 }}\n        fullWidth\n        type=\"submit\"\n      >\n        Submit\n      </Button>\n\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={4000}\n        onClose={handleSnackbarClose}\n        message=\"Form submitted successfully!\"\n      />\n    </Box>\n  );\n}\n"],"names":["store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","ContactForm","setFormData","useState","name","city","contactNumber","email","age","healthGoal","addiction","lifestyle","joinWhatsappGroup","errors","setErrors","openSnackbar","setOpenSnackbar","handleChange","e","value","type","checked","_jsxs","Box","component","sx","p","maxWidth","margin","boxShadow","borderRadius","backgroundColor","onSubmit","preventDefault","validateForm","newErrors","emailParams","emailjs","then","response","console","log","err","children","_jsx","TextField","label","fullWidth","onChange","error","helperText","select","MenuItem","FormControlLabel","control","Checkbox","Button","variant","color","mt","Snackbar","autoHideDuration","onClose","handleSnackbarClose","message"],"sourceRoot":""}