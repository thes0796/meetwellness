{"version":3,"file":"static/js/483.203b8939.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Fade/Fade.js","../node_modules/@mui/material/Typography/Typography.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/styles/useTheme.js","../node_modules/@mui/material/transitions/utils.js","../node_modules/@mui/material/utils/useForkRef.js","../node_modules/@mui/utils/esm/setRef/setRef.js","../node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"addEndListener\", \"appear\", \"children\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport elementAcceptingRef from '@mui/utils/elementAcceptingRef';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst styles = {\n  entering: {\n    opacity: 1\n  },\n  entered: {\n    opacity: 1\n  }\n};\n\n/**\n * The Fade transition is used by the [Modal](/material-ui/react-modal/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\nconst Fade = /*#__PURE__*/React.forwardRef(function Fade(props, ref) {\n  const theme = useTheme();\n  const defaultTimeout = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      addEndListener,\n      appear = true,\n      children,\n      easing,\n      in: inProp,\n      onEnter,\n      onEntered,\n      onEntering,\n      onExit,\n      onExited,\n      onExiting,\n      style,\n      timeout = defaultTimeout,\n      // eslint-disable-next-line react/prop-types\n      TransitionComponent = Transition\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const enableStrictModeCompat = true;\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(nodeRef, children.ref, ref);\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current;\n\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node); // So the animation always start from the start.\n\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);\n    node.style.transition = theme.transitions.create('opacity', transitionProps);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('opacity', transitionProps);\n    node.style.transition = theme.transitions.create('opacity', transitionProps);\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleAddEndListener = next => {\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    appear: appear,\n    in: inProp,\n    nodeRef: enableStrictModeCompat ? nodeRef : undefined,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    timeout: timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/React.cloneElement(children, _extends({\n        style: _extends({\n          opacity: 0,\n          visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n        }, styles[state], style, children.props.style),\n        ref: handleRef\n      }, childProps));\n    }\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fade.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Fade;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant === 'inherit' && {\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n  font: 'inherit'\n}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport * as React from 'react';\nimport { useTheme as useThemeSystem } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nexport default function useTheme() {\n  const theme = useThemeSystem(defaultTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme[THEME_ID] || theme;\n}","export const reflow = node => node.scrollTop;\nexport function getTransitionProps(props, options) {\n  var _style$transitionDura, _style$transitionTimi;\n  const {\n    timeout,\n    easing,\n    style = {}\n  } = props;\n  return {\n    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === 'object' ? easing[options.mode] : easing,\n    delay: style.transitionDelay\n  };\n}","'use client';\n\nimport useForkRef from '@mui/utils/useForkRef';\nexport default useForkRef;","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\nimport setRef from '../setRef';\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import React from 'react';\nexport default React.createContext(null);","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };"],"names":["_excluded","styles","entering","opacity","entered","React","props","ref","theme","useTheme","defaultTimeout","enter","transitions","duration","enteringScreen","exit","leavingScreen","addEndListener","appear","children","easing","in","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent","Transition","other","_objectWithoutPropertiesLoose","nodeRef","handleRef","useForkRef","normalizedTransitionCallback","callback","maybeIsAppearing","node","current","undefined","handleEntering","handleEnter","isAppearing","reflow","transitionProps","getTransitionProps","mode","webkitTransition","create","transition","handleEntered","handleExiting","handleExit","handleExited","_jsx","_extends","next","state","childProps","visibility","TypographyRoot","styled","name","slot","overridesResolver","ownerState","root","variant","align","capitalize","noWrap","gutterBottom","paragraph","_ref","margin","font","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","inProps","themeProps","useDefaultProps","color","transformDeprecatedColors","extendSxProp","className","component","variantMapping","Component","classes","slots","composeClasses","getTypographyUtilityClass","useUtilityClasses","as","clsx","generateUtilityClass","generateUtilityClasses","useThemeSystem","defaultTheme","THEME_ID","scrollTop","options","_style$transitionDura","_style$transitionTimi","transitionDuration","transitionTimingFunction","delay","transitionDelay","setRef","value","_len","arguments","length","refs","Array","_key","every","instance","forEach","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","_React$Component","context","_this","call","this","initialStatus","isMounting","appearStatus","unmountOnExit","mountOnEnter","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","mounting","ReactDOM","forceReflow","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onTransitionEnd","_this3","cancel","nextState","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","TransitionGroupContext","Provider","only","noop","contextType","propTypes","defaultProps","_setPrototypeOf","t","e","Object","setPrototypeOf","bind","__proto__","o","constructor"],"sourceRoot":""}